{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Willkommen! Welcome to the course website for Programming Practices for Research in Economics at the University of Zurich. The goal of this course is to equip participants with a state of the art toolkit in computational practices within Economics and Business research. Learn more about the motivation and goals for the course here . Announcing the Fall 2022 Edition We are running a three week course in Fall 2022. The course will focus on reproducible research practices and the Python and R programming languages. You find the course website with the schedule and all other information here . Previous Editions If you are looking for course materials from previous editions of the course, please see the Editions page for a complete set of links.","title":"Home"},{"location":"#willkommen","text":"Welcome to the course website for Programming Practices for Research in Economics at the University of Zurich. The goal of this course is to equip participants with a state of the art toolkit in computational practices within Economics and Business research. Learn more about the motivation and goals for the course here .","title":"Willkommen!"},{"location":"#announcing-the-fall-2022-edition","text":"We are running a three week course in Fall 2022. The course will focus on reproducible research practices and the Python and R programming languages. You find the course website with the schedule and all other information here .","title":"Announcing the Fall 2022 Edition"},{"location":"#previous-editions","text":"If you are looking for course materials from previous editions of the course, please see the Editions page for a complete set of links.","title":"Previous Editions"},{"location":"editions/","text":"Editions Programming Practices for Research in Economics was launched in 2016. Links to each version of the Course can be found below. 2022 Edition The Fall 2022 edition will be held August 24 - September 9, 2022 at Uni Zurich. Links Course Material for the 2022 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material 2021 Edition The Fall 2021 edition will be held September 2 - September 14, 2021 at Uni Zurich. Links Course Material for the 2021 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material 2020 Edition The Winter 2020 edition will be held January 27 - Feb 14, 2020 at Uni Zurich. Links Course Material for the 2020 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material 2019 Foundations Edition The 4 day foundations course will be held from the 13th of February until the 16th of February at Uni Zurich. Links Course Material for the 2019 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material 2018 Edition The 2018 edition will be held August 27 - September 19, 2018 at Uni Zurich. Links Course Material for the 2018 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material 2017 Edition The 2017 edition was held from the August 28 - September 15, 2017. Links Course Material for the 2017 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material 2016 Edition The 2016 edition was held from the 29th August until 9th September, 2016. Links Course Syllabus Course Material requires a Department of Economics log in","title":"Editions"},{"location":"editions/#editions","text":"Programming Practices for Research in Economics was launched in 2016. Links to each version of the Course can be found below.","title":"Editions"},{"location":"editions/#2022-edition","text":"The Fall 2022 edition will be held August 24 - September 9, 2022 at Uni Zurich. Links Course Material for the 2022 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material","title":"2022 Edition"},{"location":"editions/#2021-edition","text":"The Fall 2021 edition will be held September 2 - September 14, 2021 at Uni Zurich. Links Course Material for the 2021 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material","title":"2021 Edition"},{"location":"editions/#2020-edition","text":"The Winter 2020 edition will be held January 27 - Feb 14, 2020 at Uni Zurich. Links Course Material for the 2020 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material","title":"2020 Edition"},{"location":"editions/#2019-foundations-edition","text":"The 4 day foundations course will be held from the 13th of February until the 16th of February at Uni Zurich. Links Course Material for the 2019 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material","title":"2019 Foundations Edition"},{"location":"editions/#2018-edition","text":"The 2018 edition will be held August 27 - September 19, 2018 at Uni Zurich. Links Course Material for the 2018 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material","title":"2018 Edition"},{"location":"editions/#2017-edition","text":"The 2017 edition was held from the August 28 - September 15, 2017. Links Course Material for the 2017 edition can be found here: Course Home Page Installation Guide Course Syllabus Course Material","title":"2017 Edition"},{"location":"editions/#2016-edition","text":"The 2016 edition was held from the 29th August until 9th September, 2016. Links Course Syllabus Course Material requires a Department of Economics log in","title":"2016 Edition"},{"location":"install-guide/","text":"Installation Guide Setting up a computer to do computational / statistical resarch is often an intimidating first step. We provide a step-by-step set of instructions for participants on how to install all of the required software for the course. Our instructions provide details for Windows, Mac and Ubuntu flavoured Linux machines. We use these instructions ourselves when setting up our machines. Let us know if you find the instructions useful for your own work. If you find errors or explanations that lack clarity, drop us a short email (see Contact page) or post an issue on the respective Github pages listed below and we'll do our best to add some clarifiying information. Current Installation Guides Current Version: click here . Installation Issues - tells us about them . Archived Installation Guides We archive all versions of the installation guide so that participants in previous editions have access to how to set up the environment they used during the course. The 2022 Installation Guide is here The 2021 Installation Guide is here The 2020 Installation Guide is here The 2019 Foundations Installation Guide is here The 2018 Installation Guide is here The 2017 Installation Guide is here . We recommend that 2016 participants use this version. The topics are essentially unchanged but the clarity in instructions is much improved.","title":"Installation Guide"},{"location":"install-guide/#installation-guide","text":"Setting up a computer to do computational / statistical resarch is often an intimidating first step. We provide a step-by-step set of instructions for participants on how to install all of the required software for the course. Our instructions provide details for Windows, Mac and Ubuntu flavoured Linux machines. We use these instructions ourselves when setting up our machines. Let us know if you find the instructions useful for your own work. If you find errors or explanations that lack clarity, drop us a short email (see Contact page) or post an issue on the respective Github pages listed below and we'll do our best to add some clarifiying information.","title":"Installation Guide"},{"location":"install-guide/#current-installation-guides","text":"Current Version: click here . Installation Issues - tells us about them .","title":"Current Installation Guides"},{"location":"install-guide/#archived-installation-guides","text":"We archive all versions of the installation guide so that participants in previous editions have access to how to set up the environment they used during the course. The 2022 Installation Guide is here The 2021 Installation Guide is here The 2020 Installation Guide is here The 2019 Foundations Installation Guide is here The 2018 Installation Guide is here The 2017 Installation Guide is here . We recommend that 2016 participants use this version. The topics are essentially unchanged but the clarity in instructions is much improved.","title":"Archived Installation Guides"},{"location":"about/about-us/","text":"Motivation Much of a researchers live in modern economic research is spent in front of a computer -- be it to analyze data or to simulate economic models. Unfortunately, it is rare that we have been taught how to do this in a structured and efficient way. Class exposure to programming languages is most often limited to the simple use of Stata and Matlab to solve `toy' examples designed to illustrate a theoretical result or implement a method with known properties and ex-ante known results. These skills, like copy and pasting pieces of code repeatedly, do not scale up in a straightforward manner to handle complex projects that make up research papers, PhD theses or typical work in government or private business settings. As a result, young economic researchers spend too much time wrestling with software and too little time doing economics -- our comparative advantage. Even with large investments in software wrestling and self-learned skills, we typically have no idea how reliable or efficient our programs are. This course is designed to improve learners' programming abilities. It is aimed at PhD students who expect to write their theses in a field that requires modest to heavy use of computation. Examples include applied microeconomics, econometrics, macroeconomics, computational economics and any field that either involves real-world data or does not generally lead to models with simple closed-form solutions. The course introduces students to a set of industry standard tools and programming methods that aim to reduce time spent programming while at the same time making programs more dependable and results reproducible. It draws extensively on basic techniques and tools that are the backbone of modern software development and have enabled the development and maintenance of Windows or the Google search engine. At the same time, these tools are simple enough to be used in small research projects, too. The course shows the usefulness of these techniques and trains the student in them by means of hands-on examples for a wide variety of economic and econometric applications. Target Audience This course is intended for PhD students who are transitioning from coursework to research. Next to your economics background, we will only assume that you have written small pieces of code before, like Stata .do-files or Matlab .m-files for problem sets in your Masters degree or first-year PhD classes. Knowledge of a specific programming language is not required. A large part of this course is really about tool choice. We will take care in pointing out which language is most appropriate for which problem, and provide you with introductions to three popular choices for data- and computationally intensive computing. These are not the only choices available but some knowledge of these languages will make picking up others on your own or through our PhD computing seminars relatively easy. Course Objectives This course has two closely intertwined objectives: Enhancing students' programming efficiency. Providing the tools to make data analysis and computation reproducible.","title":"Motivation"},{"location":"about/about-us/#motivation","text":"Much of a researchers live in modern economic research is spent in front of a computer -- be it to analyze data or to simulate economic models. Unfortunately, it is rare that we have been taught how to do this in a structured and efficient way. Class exposure to programming languages is most often limited to the simple use of Stata and Matlab to solve `toy' examples designed to illustrate a theoretical result or implement a method with known properties and ex-ante known results. These skills, like copy and pasting pieces of code repeatedly, do not scale up in a straightforward manner to handle complex projects that make up research papers, PhD theses or typical work in government or private business settings. As a result, young economic researchers spend too much time wrestling with software and too little time doing economics -- our comparative advantage. Even with large investments in software wrestling and self-learned skills, we typically have no idea how reliable or efficient our programs are. This course is designed to improve learners' programming abilities. It is aimed at PhD students who expect to write their theses in a field that requires modest to heavy use of computation. Examples include applied microeconomics, econometrics, macroeconomics, computational economics and any field that either involves real-world data or does not generally lead to models with simple closed-form solutions. The course introduces students to a set of industry standard tools and programming methods that aim to reduce time spent programming while at the same time making programs more dependable and results reproducible. It draws extensively on basic techniques and tools that are the backbone of modern software development and have enabled the development and maintenance of Windows or the Google search engine. At the same time, these tools are simple enough to be used in small research projects, too. The course shows the usefulness of these techniques and trains the student in them by means of hands-on examples for a wide variety of economic and econometric applications.","title":"Motivation"},{"location":"about/about-us/#target-audience","text":"This course is intended for PhD students who are transitioning from coursework to research. Next to your economics background, we will only assume that you have written small pieces of code before, like Stata .do-files or Matlab .m-files for problem sets in your Masters degree or first-year PhD classes. Knowledge of a specific programming language is not required. A large part of this course is really about tool choice. We will take care in pointing out which language is most appropriate for which problem, and provide you with introductions to three popular choices for data- and computationally intensive computing. These are not the only choices available but some knowledge of these languages will make picking up others on your own or through our PhD computing seminars relatively easy.","title":"Target Audience"},{"location":"about/about-us/#course-objectives","text":"This course has two closely intertwined objectives: Enhancing students' programming efficiency. Providing the tools to make data analysis and computation reproducible.","title":"Course Objectives"},{"location":"about/contact/","text":"Contact Please contact us via email: pp4rs@econ.uzh.ch","title":"Contact"},{"location":"about/contact/#contact","text":"Please contact us via email: pp4rs@econ.uzh.ch","title":"Contact"},{"location":"about/instructors/","text":"Instructors and Leadership Programming Practices has been created by former PhD Students and employees in the Department of Economics at the University of Zurich. Over the years, many people have contributed to it as instructors or teaching assistants. Founders Adrian Etter Adrian was the team leader of the IT engineering group within the Department of Economics until the end of the 2017/18 academic year. Adrian was a co-founder of PP4RS, teaching in 2016 and 2017. Lachlan Deer Lachlan is a Assistant Professor of Marketing at Tilburg University. His research interests lie in quantitative marketing, empirical industrial organization, and structural econometrics. Lachlan is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019, 2020 and 2021. Julian Langer Julian is a Fellow at the Access to Justice Lab at Harvard Law School and a visiting researcher at the Berlin Social Science Center (WZB). His research interests lie in political economy, economic history, the economics of crime, applied machine learning and text-as-data. Julian is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019 and 2021. Max Winkler Max is a postdoctoral Fellow at Harvard University with Joseph Henrich\u2019s Culture, Cognition, and Coevolution Lab. His research interests lie in Development, Culture, Economic History, and Political Economy. Max was a co-founder of PP4RS, teaching in 2016 and 2017. Previous Instructors Ulrich Bergmann Uli is a Senior Data Scientist at Tourlane. His research interests lie in behavioral economics, experimental economics and neuro-economics. Uli joined the team for the 2018 Edition and teaches again in 2020. Matteo Courthoud Matteo is a Doctoral Candidate in the Department of Economics. His research interests lie in empirical industrial organization. Uli joined the team for the 2020 Edition. Ursina Schaede Ursina will be an SNSF post doc at MIT for 2022/23 and subsequently join the Department of Economics at Tufts University as an Assistant Professor. Ursina joined the team for the 2018 Edition. Julius Sch\u00e4per Julius is a PhD candidate at the University of Zurich. He is interested in Econometrics, Machine Learning and applies the techniques to questions in Empirical Microeconomics. Lexi Schubert Lexi is a Doctoral Candidate in the Department of Economics. Christian joined the team for the 2021 Edition. Dora Simon Dora is an Assistant Professor at University of Stavanger Business School in Norway. Dora joined the team for the 2018 Edition. Martin Stancsics Martin is a PhD candidate at the University of Zurich. His research interests currently lie in theoretical industrial organization, behavioral economics and applied natural language processing. Martin joined the team for 2021 and 2022. Carlo Zanella Carlo is a Postdoctoral Researcher at the University of Zurich. Carlo joined the team for the 2018 Edition. Christian Zund Christian is a Doctoral Candidate in the Department of Economics. Christian joined the team for the 2018 Edition.","title":"Leadership & Instructors"},{"location":"about/instructors/#instructors-and-leadership","text":"Programming Practices has been created by former PhD Students and employees in the Department of Economics at the University of Zurich. Over the years, many people have contributed to it as instructors or teaching assistants.","title":"Instructors and Leadership"},{"location":"about/instructors/#founders","text":"","title":"Founders"},{"location":"about/instructors/#adrian-etter","text":"Adrian was the team leader of the IT engineering group within the Department of Economics until the end of the 2017/18 academic year. Adrian was a co-founder of PP4RS, teaching in 2016 and 2017.","title":"Adrian Etter"},{"location":"about/instructors/#lachlan-deer","text":"Lachlan is a Assistant Professor of Marketing at Tilburg University. His research interests lie in quantitative marketing, empirical industrial organization, and structural econometrics. Lachlan is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019, 2020 and 2021.","title":"Lachlan Deer"},{"location":"about/instructors/#julian-langer","text":"Julian is a Fellow at the Access to Justice Lab at Harvard Law School and a visiting researcher at the Berlin Social Science Center (WZB). His research interests lie in political economy, economic history, the economics of crime, applied machine learning and text-as-data. Julian is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019 and 2021.","title":"Julian Langer"},{"location":"about/instructors/#max-winkler","text":"Max is a postdoctoral Fellow at Harvard University with Joseph Henrich\u2019s Culture, Cognition, and Coevolution Lab. His research interests lie in Development, Culture, Economic History, and Political Economy. Max was a co-founder of PP4RS, teaching in 2016 and 2017.","title":"Max Winkler"},{"location":"about/instructors/#previous-instructors","text":"","title":"Previous Instructors"},{"location":"about/instructors/#ulrich-bergmann","text":"Uli is a Senior Data Scientist at Tourlane. His research interests lie in behavioral economics, experimental economics and neuro-economics. Uli joined the team for the 2018 Edition and teaches again in 2020.","title":"Ulrich Bergmann"},{"location":"about/instructors/#matteo-courthoud","text":"Matteo is a Doctoral Candidate in the Department of Economics. His research interests lie in empirical industrial organization. Uli joined the team for the 2020 Edition.","title":"Matteo Courthoud"},{"location":"about/instructors/#ursina-schaede","text":"Ursina will be an SNSF post doc at MIT for 2022/23 and subsequently join the Department of Economics at Tufts University as an Assistant Professor. Ursina joined the team for the 2018 Edition.","title":"Ursina Schaede"},{"location":"about/instructors/#julius-schaper","text":"Julius is a PhD candidate at the University of Zurich. He is interested in Econometrics, Machine Learning and applies the techniques to questions in Empirical Microeconomics.","title":"Julius Sch\u00e4per"},{"location":"about/instructors/#lexi-schubert","text":"Lexi is a Doctoral Candidate in the Department of Economics. Christian joined the team for the 2021 Edition.","title":"Lexi Schubert"},{"location":"about/instructors/#dora-simon","text":"Dora is an Assistant Professor at University of Stavanger Business School in Norway. Dora joined the team for the 2018 Edition.","title":"Dora Simon"},{"location":"about/instructors/#martin-stancsics","text":"Martin is a PhD candidate at the University of Zurich. His research interests currently lie in theoretical industrial organization, behavioral economics and applied natural language processing. Martin joined the team for 2021 and 2022.","title":"Martin Stancsics"},{"location":"about/instructors/#carlo-zanella","text":"Carlo is a Postdoctoral Researcher at the University of Zurich. Carlo joined the team for the 2018 Edition.","title":"Carlo Zanella"},{"location":"about/instructors/#christian-zund","text":"Christian is a Doctoral Candidate in the Department of Economics. Christian joined the team for the 2018 Edition.","title":"Christian Zund"},{"location":"license/acknowledgements/","text":"Acknowledgements This course is designed after and borrows a lot from: Effective Programming Practices for Economists , a course by Hans-Martin von Gaudecker . Software Carpentry and Data Carpentry The material from above sources is made available under a Creative Commons By Attribution Share Alike License , as is our courses materials and installation guide.","title":"Acknowledgements"},{"location":"license/acknowledgements/#acknowledgements","text":"This course is designed after and borrows a lot from: Effective Programming Practices for Economists , a course by Hans-Martin von Gaudecker . Software Carpentry and Data Carpentry The material from above sources is made available under a Creative Commons By Attribution Share Alike License , as is our courses materials and installation guide.","title":"Acknowledgements"},{"location":"license/license/","text":"License Much of our course has been influenced by existing courses on programming practices. Please see the Acknowlegements page for further information about those who have had a large influence on our philosophy and on which some materials are based. All materials, like those that we are based on, are licensed under a by attribution license, CC-BY-NC-SA in our case. The license allows you to copy, remix and redistribute any of our publicly available materials, under the condition that you attribute the work (details in the license) and do not make profits from it. Read the complete license information here . Here is a short summary: You are free to: Share \u2014 copy and redistribute the material in any medium or format Adapt \u2014 remix, transform, and build upon the material The licensor cannot revoke these freedoms as long as you follow the license terms. Under the following terms: Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. NonCommercial \u2014 You may not use the material for commercial purposes. ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original. No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits. Thanks! This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License .","title":"License"},{"location":"license/license/#license","text":"Much of our course has been influenced by existing courses on programming practices. Please see the Acknowlegements page for further information about those who have had a large influence on our philosophy and on which some materials are based. All materials, like those that we are based on, are licensed under a by attribution license, CC-BY-NC-SA in our case. The license allows you to copy, remix and redistribute any of our publicly available materials, under the condition that you attribute the work (details in the license) and do not make profits from it. Read the complete license information here . Here is a short summary: You are free to: Share \u2014 copy and redistribute the material in any medium or format Adapt \u2014 remix, transform, and build upon the material The licensor cannot revoke these freedoms as long as you follow the license terms. Under the following terms: Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. NonCommercial \u2014 You may not use the material for commercial purposes. ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original. No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits. Thanks! This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License .","title":"License"}]}