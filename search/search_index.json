{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Welcome to the course website for Programming Practices for Research in Economics at the University of Zurich. The goal of this course is to equip participants with a state of the art toolkit in computational practices within Economics and Business research.","title":"Welcome"},{"location":"#welcome","text":"Welcome to the course website for Programming Practices for Research in Economics at the University of Zurich. The goal of this course is to equip participants with a state of the art toolkit in computational practices within Economics and Business research.","title":"Welcome!"},{"location":"CONDUCT/","text":"Contributor Code of Conduct As contributors and maintainers of this project, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities. We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion. Examples of unacceptable behavior by participants include the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. Project maintainers who do not follow the Code of Conduct may be removed from the project team. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers. This Code of Conduct is adapted from the Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available at http://contributor-covenant.org/version/1/0/0/","title":"Contributor Code of Conduct"},{"location":"CONDUCT/#contributor-code-of-conduct","text":"As contributors and maintainers of this project, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities. We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion. Examples of unacceptable behavior by participants include the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. Project maintainers who do not follow the Code of Conduct may be removed from the project team. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers. This Code of Conduct is adapted from the Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available at http://contributor-covenant.org/version/1/0/0/","title":"Contributor Code of Conduct"},{"location":"CONTRIBUTING/","text":"Contributing Programming Practices for Research in Students is an open source project, and we welcome contributions of all kinds: new lessons, fixes to existing material, bug reports, and reviews of proposed changes are all welcome. Contributor Agreement By contributing, you agree that we may redistribute your work under our license . In exchange, we will address your issues and/or assess your change proposal as promptly as we can, and help you become a member of our community. Everyone involved agrees to abide by our code of conduct . Using GitHub If you choose to contribute via GitHub, you may want to look at How to Contribute to an Open Source Project on GitHub . To manage changes, we follow GitHub flow . Each lesson has one or two maintainers who review issues and pull requests or encourage others to do so. The maintainers have final say over what gets merged into the lesson. To use the web interface for contributing to a lesson: Fork the originating repository to your GitHub profile. Within your version of the forked repository, move to the master branch and create a new branch for each significant change being made. Navigate to the file(s) you wish to change within the new branches and make revisions as required. Commit all changed files within the appropriate branches. Create individual pull requests from each of your changed branches to the master branch within the originating repository. If you receive feedback, make changes using your issue-specific branches of the forked repository and the pull requests will update automatically. Repeat as needed until all feedback has been addressed. When starting work, please make sure your clone of the originating master branch is up-to-date before creating your own revision-specific branch(es) from there. Additionally, please only work from your newly-created branch(es) and not your clone of the originating master branch. Lastly, published copies of all the lessons are available in the master branch of the originating repository for reference while revising.","title":"Contributing"},{"location":"CONTRIBUTING/#contributing","text":"Programming Practices for Research in Students is an open source project, and we welcome contributions of all kinds: new lessons, fixes to existing material, bug reports, and reviews of proposed changes are all welcome.","title":"Contributing"},{"location":"CONTRIBUTING/#contributor-agreement","text":"By contributing, you agree that we may redistribute your work under our license . In exchange, we will address your issues and/or assess your change proposal as promptly as we can, and help you become a member of our community. Everyone involved agrees to abide by our code of conduct .","title":"Contributor Agreement"},{"location":"CONTRIBUTING/#using-github","text":"If you choose to contribute via GitHub, you may want to look at How to Contribute to an Open Source Project on GitHub . To manage changes, we follow GitHub flow . Each lesson has one or two maintainers who review issues and pull requests or encourage others to do so. The maintainers have final say over what gets merged into the lesson. To use the web interface for contributing to a lesson: Fork the originating repository to your GitHub profile. Within your version of the forked repository, move to the master branch and create a new branch for each significant change being made. Navigate to the file(s) you wish to change within the new branches and make revisions as required. Commit all changed files within the appropriate branches. Create individual pull requests from each of your changed branches to the master branch within the originating repository. If you receive feedback, make changes using your issue-specific branches of the forked repository and the pull requests will update automatically. Repeat as needed until all feedback has been addressed. When starting work, please make sure your clone of the originating master branch is up-to-date before creating your own revision-specific branch(es) from there. Additionally, please only work from your newly-created branch(es) and not your clone of the originating master branch. Lastly, published copies of all the lessons are available in the master branch of the originating repository for reference while revising.","title":"Using GitHub"},{"location":"acknowledgement/","text":"Acknowledgements This edition of Programming Practices is based on the previous versions of the course. Further information on contributors can be found under \"Instructors\". It is designed after and borrows a lot from: Effective Programming Practices for Economists , a course by Hans-Martin von Gaudecker Software Carpentry's Managing Software Research Projects lesson Data Science for Economists , a course by Grant McDermott","title":"Acknowledgements"},{"location":"acknowledgement/#acknowledgements","text":"This edition of Programming Practices is based on the previous versions of the course. Further information on contributors can be found under \"Instructors\". It is designed after and borrows a lot from: Effective Programming Practices for Economists , a course by Hans-Martin von Gaudecker Software Carpentry's Managing Software Research Projects lesson Data Science for Economists , a course by Grant McDermott","title":"Acknowledgements"},{"location":"citation-license/","text":"License Material is licensed under a CC-BY-SA license.","title":"Citation & License"},{"location":"citation-license/#license","text":"Material is licensed under a CC-BY-SA license.","title":"License"},{"location":"contact/","text":"Contact Us Please contact us via email: pp4rs@econ.uzh.ch . We look forward to hearing from you if you have questions about the installation guide, found this installation guide useful, or have further comments or suggestions to improve it. Microsoft Teams Throughout the course we will post useful tidbits of information, and answer questions that are slightly off topic via Microsoft Teams. Join Our Team Log in with your econ.uzh.ch, bf.uzh.ch or uzh.ch email address. Join the channel Main (2024)","title":"Contact Us/Communication"},{"location":"contact/#contact-us","text":"Please contact us via email: pp4rs@econ.uzh.ch . We look forward to hearing from you if you have questions about the installation guide, found this installation guide useful, or have further comments or suggestions to improve it.","title":"Contact Us"},{"location":"contact/#microsoft-teams","text":"Throughout the course we will post useful tidbits of information, and answer questions that are slightly off topic via Microsoft Teams. Join Our Team Log in with your econ.uzh.ch, bf.uzh.ch or uzh.ch email address. Join the channel Main (2024)","title":"Microsoft Teams"},{"location":"course_material/","text":"Course Material All course material and live notes will be uploaded to GitHub In addition, Lachlan Deer, Julian Langer and Ulrich Bergmann have written two excellent books introducing Python and R: Introduction to Python Introduction to R","title":"Course Material"},{"location":"course_material/#course-material","text":"All course material and live notes will be uploaded to GitHub In addition, Lachlan Deer, Julian Langer and Ulrich Bergmann have written two excellent books introducing Python and R: Introduction to Python Introduction to R","title":"Course Material"},{"location":"editions/","text":"Editions Programming Practices for Research in Economics was launched in 2016. Links to each version of the Course can be found below. 2022 Edition The Fall 2022 edition will be held August 24 - September 9, 2022 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material 2021 Edition The Fall 2021 edition will be held September 2 - September 14, 2021 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material 2020 Edition The Winter 2020 edition will be held January 27 - February 14, 2020 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material 2019 Foundations Edition The 4-day foundations course will be held from February 13 until February 16 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material 2018 Edition The 2018 edition will be held August 27 - September 19, 2018 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material 2017 Edition The 2017 edition was held from August 28 - September 15, 2017. Course Home Page Installation Guide Course Syllabus Course Material 2016 Edition The 2016 edition was held from August 29 until September 9, 2016. Course Syllabus Course Material (requires a Department of Economics log in)","title":"Archive"},{"location":"editions/#editions","text":"Programming Practices for Research in Economics was launched in 2016. Links to each version of the Course can be found below.","title":"Editions"},{"location":"editions/#2022-edition","text":"The Fall 2022 edition will be held August 24 - September 9, 2022 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material","title":"2022 Edition"},{"location":"editions/#2021-edition","text":"The Fall 2021 edition will be held September 2 - September 14, 2021 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material","title":"2021 Edition"},{"location":"editions/#2020-edition","text":"The Winter 2020 edition will be held January 27 - February 14, 2020 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material","title":"2020 Edition"},{"location":"editions/#2019-foundations-edition","text":"The 4-day foundations course will be held from February 13 until February 16 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material","title":"2019 Foundations Edition"},{"location":"editions/#2018-edition","text":"The 2018 edition will be held August 27 - September 19, 2018 at Uni Zurich. Course Home Page Installation Guide Course Syllabus Course Material","title":"2018 Edition"},{"location":"editions/#2017-edition","text":"The 2017 edition was held from August 28 - September 15, 2017. Course Home Page Installation Guide Course Syllabus Course Material","title":"2017 Edition"},{"location":"editions/#2016-edition","text":"The 2016 edition was held from August 29 until September 9, 2016. Course Syllabus Course Material (requires a Department of Economics log in)","title":"2016 Edition"},{"location":"evaluation/","text":"Evaluation Submission Deadline Submissions must be made by 8.9.2024 at 23:59. This course will be assessed on a pass/fail basis, with a final assignment accounting for 100% of the evaluation. The assignment, which must apply the tools and techniques learned during the course, is due one week after the course concludes. Detailed instructions will be provided in the first class. Students may work individually or in pairs. The assignment must be managed using Git and hosted on GitHub. The final evaluation will be based on the submitted GitHub repository. The entire project should be executable with a single command, which will automate all steps, from data acquisition to the generation of a final report. Here and here are two examples.","title":"Evaluation"},{"location":"evaluation/#evaluation","text":"Submission Deadline Submissions must be made by 8.9.2024 at 23:59. This course will be assessed on a pass/fail basis, with a final assignment accounting for 100% of the evaluation. The assignment, which must apply the tools and techniques learned during the course, is due one week after the course concludes. Detailed instructions will be provided in the first class. Students may work individually or in pairs. The assignment must be managed using Git and hosted on GitHub. The final evaluation will be based on the submitted GitHub repository. The entire project should be executable with a single command, which will automate all steps, from data acquisition to the generation of a final report. Here and here are two examples.","title":"Evaluation"},{"location":"install_guide/","text":"Installation Guide Setting up a computer to do computational / statistical resarch is often an intimidating first step. We provide a step-by-step set of instructions for participants on how to install all of the required software for the course. Our instructions provide details for Windows, Mac and Ubuntu flavoured Linux machines. We use these instructions ourselves when setting up our machines. Let us know if you find the instructions useful for your own work. If you find errors or explanations that lack clarity, drop us a short email (see Contact page) and we'll do our best to add some clarifiying information. Installation Help Please try and install all the software before the course begins. If you are struggling we are able to help - but we expect you have tried to work through the guide yourself. We will offer an installation help: Check the Schedule for details. Current Installation Guides Current Version: 2024 Installation Guide Archived Installation Guides We archive all versions of the installation guide so that participants in previous editions have access to how to set up the environment they used during the course. You can find the the archived course material here .","title":"Installation Guide"},{"location":"install_guide/#installation-guide","text":"Setting up a computer to do computational / statistical resarch is often an intimidating first step. We provide a step-by-step set of instructions for participants on how to install all of the required software for the course. Our instructions provide details for Windows, Mac and Ubuntu flavoured Linux machines. We use these instructions ourselves when setting up our machines. Let us know if you find the instructions useful for your own work. If you find errors or explanations that lack clarity, drop us a short email (see Contact page) and we'll do our best to add some clarifiying information. Installation Help Please try and install all the software before the course begins. If you are struggling we are able to help - but we expect you have tried to work through the guide yourself. We will offer an installation help: Check the Schedule for details.","title":"Installation Guide"},{"location":"install_guide/#current-installation-guides","text":"Current Version: 2024 Installation Guide","title":"Current Installation Guides"},{"location":"install_guide/#archived-installation-guides","text":"We archive all versions of the installation guide so that participants in previous editions have access to how to set up the environment they used during the course. You can find the the archived course material here .","title":"Archived Installation Guides"},{"location":"instructors/","text":"Instructors Programming Practices has been created by former PhD Students and employees in the Department of Economics at the University of Zurich. Over the years, many people have contributed to it as instructors or teaching assistants. Founders Adrian Etter Adrian was the team leader of the IT engineering group within the Department of Economics until the end of the 2017/18 academic year. Adrian was a co-founder of PP4RS, teaching in 2016 and 2017. Lachlan Deer Lachlan is a Assistant Professor of Marketing at Tilburg University. His research interests lie in quantitative marketing, empirical industrial organization, and structural econometrics. Lachlan is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019, 2020 and 2021. Julian Langer Julian is a Fellow at the Access to Justice Lab at Harvard Law School and a visiting researcher at the Berlin Social Science Center (WZB). His research interests lie in political economy, economic history, the economics of crime, applied machine learning and text-as-data. Julian is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019 and 2021. Max Winkler Max is a postdoctoral Fellow at Harvard University with Joseph Henrich\u2019s Culture, Cognition, and Coevolution Lab. His research interests lie in Development, Culture, Economic History, and Political Economy. Max was a co-founder of PP4RS, teaching in 2016 and 2017. Current Instructors and TAs Julius Sch\u00e4per Julius is a PhD candidate at the University of Zurich. He is interested in Econometrics, Machine Learning and applies the techniques to questions in Empirical Microeconomics. Frederik Bennhoff Fred is a PhD candidate at the University of Zurich. He works in Macroeconomics and Public Finance. S\u00e1ra Khayouti S\u00e1ra is a PhD candidate at the University of Zurich. Her research interests lie in the field of behavioural economics, especially in behavioural development economics and behavioral theory. Justinas Grigaitis Previous Instructors and TAs Ulrich Bergmann Uli is a Senior Data Scientist at Tourlane. His research interests lie in behavioral economics, experimental economics and neuro-economics. Uli joined the team for the 2018 Edition and teaches again in 2020. Matteo Courthoud Matteo is a Doctoral Candidate in the Department of Economics. His research interests lie in empirical industrial organization. Ursina Schaede Ursina will be an SNSF post doc at MIT for 2022/23 and subsequently join the Department of Economics at Tufts University as an Assistant Professor. Ursina joined the team for the 2018 Edition. Lexi Schubert Lexi is a Doctoral Candidate in the Department of Economics. Dora Simon Dora is an Assistant Professor at University of Stavanger Business School in Norway. Dora joined the team for the 2018 Edition. Martin Stancsics Martin is a PhD candidate at the University of Zurich. His research interests currently lie in theoretical industrial organization, behavioral economics and applied natural language processing. Martin joined the team for 2021 and 2022. Carlo Zanella Carlo is a Postdoctoral Researcher at the University of Zurich. Carlo joined the team for the 2018 Edition. Christian Zund Christian is a Doctoral Candidate in the Department of Economics. Christian joined the team for the 2018 Edition.","title":"Instructors"},{"location":"instructors/#instructors","text":"Programming Practices has been created by former PhD Students and employees in the Department of Economics at the University of Zurich. Over the years, many people have contributed to it as instructors or teaching assistants.","title":"Instructors"},{"location":"instructors/#founders","text":"","title":"Founders"},{"location":"instructors/#adrian-etter","text":"Adrian was the team leader of the IT engineering group within the Department of Economics until the end of the 2017/18 academic year. Adrian was a co-founder of PP4RS, teaching in 2016 and 2017.","title":"Adrian Etter"},{"location":"instructors/#lachlan-deer","text":"Lachlan is a Assistant Professor of Marketing at Tilburg University. His research interests lie in quantitative marketing, empirical industrial organization, and structural econometrics. Lachlan is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019, 2020 and 2021.","title":"Lachlan Deer"},{"location":"instructors/#julian-langer","text":"Julian is a Fellow at the Access to Justice Lab at Harvard Law School and a visiting researcher at the Berlin Social Science Center (WZB). His research interests lie in political economy, economic history, the economics of crime, applied machine learning and text-as-data. Julian is a co-founder of the PP4RS courses, previously teaching 2016, 2017, 2019 and 2021.","title":"Julian Langer"},{"location":"instructors/#max-winkler","text":"Max is a postdoctoral Fellow at Harvard University with Joseph Henrich\u2019s Culture, Cognition, and Coevolution Lab. His research interests lie in Development, Culture, Economic History, and Political Economy. Max was a co-founder of PP4RS, teaching in 2016 and 2017.","title":"Max Winkler"},{"location":"instructors/#current-instructors-and-tas","text":"","title":"Current Instructors and TAs"},{"location":"instructors/#julius-schaper","text":"Julius is a PhD candidate at the University of Zurich. He is interested in Econometrics, Machine Learning and applies the techniques to questions in Empirical Microeconomics.","title":"Julius Sch\u00e4per"},{"location":"instructors/#frederik-bennhoff","text":"Fred is a PhD candidate at the University of Zurich. He works in Macroeconomics and Public Finance.","title":"Frederik Bennhoff"},{"location":"instructors/#sara-khayouti","text":"S\u00e1ra is a PhD candidate at the University of Zurich. Her research interests lie in the field of behavioural economics, especially in behavioural development economics and behavioral theory.","title":"S\u00e1ra Khayouti"},{"location":"instructors/#justinas-grigaitis","text":"","title":"Justinas Grigaitis"},{"location":"instructors/#previous-instructors-and-tas","text":"","title":"Previous Instructors and TAs"},{"location":"instructors/#ulrich-bergmann","text":"Uli is a Senior Data Scientist at Tourlane. His research interests lie in behavioral economics, experimental economics and neuro-economics. Uli joined the team for the 2018 Edition and teaches again in 2020.","title":"Ulrich Bergmann"},{"location":"instructors/#matteo-courthoud","text":"Matteo is a Doctoral Candidate in the Department of Economics. His research interests lie in empirical industrial organization.","title":"Matteo Courthoud"},{"location":"instructors/#ursina-schaede","text":"Ursina will be an SNSF post doc at MIT for 2022/23 and subsequently join the Department of Economics at Tufts University as an Assistant Professor. Ursina joined the team for the 2018 Edition.","title":"Ursina Schaede"},{"location":"instructors/#lexi-schubert","text":"Lexi is a Doctoral Candidate in the Department of Economics.","title":"Lexi Schubert"},{"location":"instructors/#dora-simon","text":"Dora is an Assistant Professor at University of Stavanger Business School in Norway. Dora joined the team for the 2018 Edition.","title":"Dora Simon"},{"location":"instructors/#martin-stancsics","text":"Martin is a PhD candidate at the University of Zurich. His research interests currently lie in theoretical industrial organization, behavioral economics and applied natural language processing. Martin joined the team for 2021 and 2022.","title":"Martin Stancsics"},{"location":"instructors/#carlo-zanella","text":"Carlo is a Postdoctoral Researcher at the University of Zurich. Carlo joined the team for the 2018 Edition.","title":"Carlo Zanella"},{"location":"instructors/#christian-zund","text":"Christian is a Doctoral Candidate in the Department of Economics. Christian joined the team for the 2018 Edition.","title":"Christian Zund"},{"location":"motivation/","text":"Motivation Much of a researcher\u2019s time in modern economics and business research is spent in front of a computer, performing some form of computational analysis\u2014whether it's analyzing data or simulating economic models. Until recently, there has been little emphasis on teaching early career researchers how to perform their computational tasks and manage the resulting projects in a structured and efficient way. Class exposure to programming languages is often limited to the simple use of Stata and Matlab to solve 'toy' examples designed to illustrate a theoretical result or implement a method with known properties and ex-ante known results. These skills do not scale up in a straightforward manner to handle complex projects that make up research papers, PhD theses, or typical work in government or private business settings. As a result, young economics and business researchers spend too much time wrestling with software and too little time doing research\u2014where our comparative advantage lies. This course is designed to improve learners\u2019 programming abilities and acquire skills to decrease their time wrestling with software. It is aimed at PhD students who expect to write their theses in a field that requires modest to heavy use of computation and data analysis. Examples include applied microeconomics, econometrics, macroeconomics, quantitative marketing, quantitative finance, and other fields that either involve real-world data or do not generally lead to analytical models with closed-form solutions. The course introduces students to a new set of tools and programming methods that aim to reduce time spent programming while making programs more dependable and results reproducible. It draws extensively on techniques and tools that are the backbone of modern software development and large-scale data science. Students gain insight into the usefulness of these techniques and how to use them through hands-on examples from a wide variety of applications in economics and business research. Target Audience This course is intended for PhD students in economics and business who are transitioning from coursework to research. Aside from your economics/business background, we will only assume that you have written small pieces of code before, such as Stata .do files or Matlab .m files for problem sets in your Master\u2019s degree or first-year PhD classes. Knowledge of a specific programming language is not required. A large part of this course is really about tool choice. We will carefully point out which language is most appropriate for which problem and provide you with introductions to two popular choices for data- and computationally intensive computing. We also introduce a toolkit designed to improve the replicability of your code. The programming languages and tools introduced in the course are not the only choices available, but some knowledge of these languages and best practices will make picking up others on your own relatively easy by providing solid basic training. Course Objectives By the end of this course, students will be able to: Use a computer\u2019s command line to provide text instructions that can navigate around a computer\u2019s file system, copy and move files, and edit new/existing files. Explain different variable types and their advantages and disadvantages in Python and R. Construct scripts that load, manipulate, and visualize data in Python and R. Implement statistical and economic models in Python and R. Run Python and R inside a GUI and from the command line (including passing complex arguments). Use and manage conda environments. Explain the advantages of using version control software such as Git as opposed to \u2018manual\u2019 version control. Manage a version-controlled project using Git. Explain what a workflow management system is and its advantages for economics and business research. Manage a research project using the workflow management software Snakemake. Learning objectives for specific modules will be provided within the Course Notes. Rules of the Game The class is designed to be hands-on in the sense that you will be programming a lot of things during the class. We strongly believe the only way to learn programming is to do programming. Please bring your laptop with you to each session and install the required software before the course begins. Try to complete each activity we do in class and be prepared to ask and answer questions during class. Slides or notes will be made available at the beginning of each day, codes that solve exercises will be posted during or after the session.","title":"Motivation"},{"location":"motivation/#motivation","text":"Much of a researcher\u2019s time in modern economics and business research is spent in front of a computer, performing some form of computational analysis\u2014whether it's analyzing data or simulating economic models. Until recently, there has been little emphasis on teaching early career researchers how to perform their computational tasks and manage the resulting projects in a structured and efficient way. Class exposure to programming languages is often limited to the simple use of Stata and Matlab to solve 'toy' examples designed to illustrate a theoretical result or implement a method with known properties and ex-ante known results. These skills do not scale up in a straightforward manner to handle complex projects that make up research papers, PhD theses, or typical work in government or private business settings. As a result, young economics and business researchers spend too much time wrestling with software and too little time doing research\u2014where our comparative advantage lies. This course is designed to improve learners\u2019 programming abilities and acquire skills to decrease their time wrestling with software. It is aimed at PhD students who expect to write their theses in a field that requires modest to heavy use of computation and data analysis. Examples include applied microeconomics, econometrics, macroeconomics, quantitative marketing, quantitative finance, and other fields that either involve real-world data or do not generally lead to analytical models with closed-form solutions. The course introduces students to a new set of tools and programming methods that aim to reduce time spent programming while making programs more dependable and results reproducible. It draws extensively on techniques and tools that are the backbone of modern software development and large-scale data science. Students gain insight into the usefulness of these techniques and how to use them through hands-on examples from a wide variety of applications in economics and business research.","title":"Motivation"},{"location":"motivation/#target-audience","text":"This course is intended for PhD students in economics and business who are transitioning from coursework to research. Aside from your economics/business background, we will only assume that you have written small pieces of code before, such as Stata .do files or Matlab .m files for problem sets in your Master\u2019s degree or first-year PhD classes. Knowledge of a specific programming language is not required. A large part of this course is really about tool choice. We will carefully point out which language is most appropriate for which problem and provide you with introductions to two popular choices for data- and computationally intensive computing. We also introduce a toolkit designed to improve the replicability of your code. The programming languages and tools introduced in the course are not the only choices available, but some knowledge of these languages and best practices will make picking up others on your own relatively easy by providing solid basic training.","title":"Target Audience"},{"location":"motivation/#course-objectives","text":"By the end of this course, students will be able to: Use a computer\u2019s command line to provide text instructions that can navigate around a computer\u2019s file system, copy and move files, and edit new/existing files. Explain different variable types and their advantages and disadvantages in Python and R. Construct scripts that load, manipulate, and visualize data in Python and R. Implement statistical and economic models in Python and R. Run Python and R inside a GUI and from the command line (including passing complex arguments). Use and manage conda environments. Explain the advantages of using version control software such as Git as opposed to \u2018manual\u2019 version control. Manage a version-controlled project using Git. Explain what a workflow management system is and its advantages for economics and business research. Manage a research project using the workflow management software Snakemake. Learning objectives for specific modules will be provided within the Course Notes.","title":"Course Objectives"},{"location":"motivation/#rules-of-the-game","text":"The class is designed to be hands-on in the sense that you will be programming a lot of things during the class. We strongly believe the only way to learn programming is to do programming. Please bring your laptop with you to each session and install the required software before the course begins. Try to complete each activity we do in class and be prepared to ask and answer questions during class. Slides or notes will be made available at the beginning of each day, codes that solve exercises will be posted during or after the session.","title":"Rules of the Game"},{"location":"schedule/","text":"Class Schedule Essential Information Classes begins on the 19th of August at 9.00 am and runs Monday to Friday until the 9th of September. Each day is divided into two sessions: Morning: 9.00 - 12.30 Afternoon: 13.30 - 17.00 Class Locations: Check schedule below The topic schedule for each day can be found below. The following is a preliminary schedule. It may be updated prior to the beginning of the course. Week 1 19.08.2024 20.08.2024 21.08.2024 22.08.2024 23.08.2024 AM Installation Help Installation Help Terminal/ScienceCloud Basic Python Basic Python PM Installation Help Installation Help Version Control Version Control Basic Python Room ZUH-H-03 ZUH-H-03 SOC-F-101 SOC-F-101 SOC-F-101 Week 2 26.08.2024 27.08.2024 28.08.2024 29.08.2024 30.08.2024 AM Python: Pandas Python: ML Python: Numpy Python: Solving Econ Models Python: Solving Econ Models PM Python: Plotting Python: Text as Data/API (Openai) Python: Multiprocessing Python: Solving Econ Models Python: Solving Econ Models Room SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101 Week 3 02.09.2024 03.09.2024 04.09.2024 05.09.2024 06.09.2024 AM R: Basics R: Plotting R: Econometrics Webscraping Static Blocked PM R: Data Analy./dpylr R: Econometrics Advanced R Webscraping Static/Project Blocked Room SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101 Week 4 Week 4 09.09.2024 AM Project Help PM Project Help Room SOC-F-101 Week 5 16.09.2024 AM Project Evaluation PM Project Evaluation Room SOC-F-101","title":"Schedule"},{"location":"schedule/#class-schedule","text":"Essential Information Classes begins on the 19th of August at 9.00 am and runs Monday to Friday until the 9th of September. Each day is divided into two sessions: Morning: 9.00 - 12.30 Afternoon: 13.30 - 17.00 Class Locations: Check schedule below The topic schedule for each day can be found below. The following is a preliminary schedule. It may be updated prior to the beginning of the course.","title":"Class Schedule"},{"location":"schedule/#week-1","text":"19.08.2024 20.08.2024 21.08.2024 22.08.2024 23.08.2024 AM Installation Help Installation Help Terminal/ScienceCloud Basic Python Basic Python PM Installation Help Installation Help Version Control Version Control Basic Python Room ZUH-H-03 ZUH-H-03 SOC-F-101 SOC-F-101 SOC-F-101","title":"Week 1"},{"location":"schedule/#week-2","text":"26.08.2024 27.08.2024 28.08.2024 29.08.2024 30.08.2024 AM Python: Pandas Python: ML Python: Numpy Python: Solving Econ Models Python: Solving Econ Models PM Python: Plotting Python: Text as Data/API (Openai) Python: Multiprocessing Python: Solving Econ Models Python: Solving Econ Models Room SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101","title":"Week 2"},{"location":"schedule/#week-3","text":"02.09.2024 03.09.2024 04.09.2024 05.09.2024 06.09.2024 AM R: Basics R: Plotting R: Econometrics Webscraping Static Blocked PM R: Data Analy./dpylr R: Econometrics Advanced R Webscraping Static/Project Blocked Room SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101 SOC-F-101","title":"Week 3"},{"location":"schedule/#week-4","text":"Week 4 09.09.2024 AM Project Help PM Project Help Room SOC-F-101","title":"Week 4"},{"location":"schedule/#week-5","text":"16.09.2024 AM Project Evaluation PM Project Evaluation Room SOC-F-101","title":"Week 5"}]}